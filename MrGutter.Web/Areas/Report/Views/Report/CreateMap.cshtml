@{
    Layout = "_Layout_CreateReport";
    ViewData["Title"] = "Layout";
}

<style>
    /* Style for the thumbnail */
    .thumbnail {
        cursor: pointer;
        width: 100% !important;
        height: auto;
        /* border: 2px solid #ddd;
                border-radius: 4px; */
        transition: transform 0.2s;
    }

    /* .thumbnail:hover {
                    transform: scale(1.1);
                } */

    /* Modal container */
    .modal {
        display: none; /* Hidden by default */
        position: fixed;
        z-index: 10000;
        left: 0;
        /*  top: 50px; */
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.8);
    }

    /* Modal content (image) */
    .modal-content {
        margin: auto;
        margin-top: 70px;
        display: block;
        max-width: 60%;
        max-height: 100%;
    }

    /* Close button */
    .close {
        position: absolute;
        top: 15px;
        right: 35px;
        color: white;
        font-size: 30px;
        font-weight: bold;
        cursor: pointer;
    }

        .close:hover, .close:focus {
            color: #bbb;
            text-decoration: none;
            cursor: pointer;
        }
</style>

<div class="flex-shrink-1 container-fluid flex-grow-1 container-p-x container-p-y pt-0">

    <div class="layout-demo-wrapper">

        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-body">
                        <!-- Container for all items -->
                        <div class="row mt-4 repeater-container">
                            <!-- Template Block -->
                            <div class="repeater-item row mb-4">
                                <!-- Image 1 -->
                                <div class="col-5">
                                    <div class="card">
                                        <div class="card-body">
                                            <img src="~/image/layoutimage.jpg" alt="thumbnail" class="thumbnail" id="thumbnail" />
                                        </div>
                                    </div>
                                </div>

                                <!-- Image 2 -->
                                <div class="col-5">
                                    <div class="card">
                                        <div class="card-body">
                                            <img src="~/image/layoutimage.jpg" alt="thumbnail" class="thumbnail" id="thumbnail" />
                                        </div>
                                    </div>
                                </div>
                                <div class="mb-4 col-md-2 text-end">
                                    <span>
                                        <a href="#" class="delete-item" data-bs-toggle="modal" title="Delete Item">
                                            <i class="ti ti-lg ti-trash-filled text-danger"></i>
                                        </a>
                                    </span>
                                </div>

                                <div class="mb-4 col-md-5 mt-3" data-repeater-items>
                                    <div class="input-group input-group-merge">
                                        <div class="col-12">
                                            <label for="description" class="form-label">Description</label>
                                            <div id="snow-toolbar" style="height: 30px;">
                                                <span class="ql-formats">
                                                    <select class="ql-font"></select>
                                                    <select class="ql-size"></select>
                                                </span>
                                                <span class="ql-formats">
                                                    <button class="ql-bold"></button>
                                                    <button class="ql-italic"></button>
                                                    <button class="ql-underline"></button>
                                                    <button class="ql-strike"></button>
                                                </span>
                                                <span class="ql-formats">
                                                    <select class="ql-color"></select>
                                                    <select class="ql-background"></select>
                                                </span>
                                                <span class="ql-formats">
                                                    <button class="ql-script" value="sub"></button>
                                                    <button class="ql-script" value="super"></button>
                                                </span>
                                                <span class="ql-formats">
                                                    <button class="ql-header" value="1"></button>
                                                    <button class="ql-header" value="2"></button>
                                                    <button class="ql-blockquote"></button>
                                                    <button class="ql-code-block"></button>
                                                </span>
                                            </div>
                                            <div id="snow-editor" style="height: 100px; overflow-y: auto;">
                                                Hello,
                                            </div>
                                        </div>
                                    </div>
                                </div>


                                <div class="mb-4 col-md-5 mt-3" data-repeater-items>
                                    <div class="input-group input-group-merge">
                                        <div class="col-12">
                                            <label for="description" class="form-label">Description</label>
                                            <div id="snow-toolbar1" style="height: 30px;">
                                                <span class="ql-formats">
                                                    <select class="ql-font"></select>
                                                    <select class="ql-size"></select>
                                                </span>
                                                <span class="ql-formats">
                                                    <button class="ql-bold"></button>
                                                    <button class="ql-italic"></button>
                                                    <button class="ql-underline"></button>
                                                    <button class="ql-strike"></button>
                                                </span>
                                                <span class="ql-formats">
                                                    <select class="ql-color"></select>
                                                    <select class="ql-background"></select>
                                                </span>
                                                <span class="ql-formats">
                                                    <button class="ql-script" value="sub"></button>
                                                    <button class="ql-script" value="super"></button>
                                                </span>
                                                <span class="ql-formats">
                                                    <button class="ql-header" value="1"></button>
                                                    <button class="ql-header" value="2"></button>
                                                    <button class="ql-blockquote"></button>
                                                    <button class="ql-code-block"></button>
                                                </span>
                                            </div>
                                            <div id="snow-editor1" style="height: 100px; overflow-y: auto;">
                                                Hello,
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <hr />
                            </div>
                        </div>

                        <!-- Add Item Button -->
                        <div class="mt-1 mb-2">
                            <button type="button" class="btn btn-outline-primary waves-effect add-item-btn">Add Item</button>
                        </div>
                    </div>
                </div>

            </div>
        </div>
        <!-- Modal -->
        <div id="imageModal" class="modal">
            <span class="close" id="closeModal">&times;</span>
            <img class="modal-content" id="largeImage">
        </div>




    </div>
</div>



<!--Script for Add item button-->
<!-- JavaScript -->

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const addItemButton = document.querySelector(".add-item-btn");
        const repeaterContainer = document.querySelector(".repeater-container");

        // Event listener for "Add Item" button
        addItemButton.addEventListener("click", function () {
            const template = document.querySelector(".repeater-item");
            if (template) {
                const newItem = template.cloneNode(true);

                // Reset editor content
                const editors = newItem.querySelectorAll(".editor");
                editors.forEach((editor) => {
                    editor.innerHTML = ""; // Clear content
                });

                // Add delete functionality to the new item
                const deleteButton = newItem.querySelector(".delete-item");
                deleteButton.addEventListener("click", function (event) {
                    event.preventDefault(); // Prevent default link behaviors
                    newItem.remove(); // Remove the item
                });

                repeaterContainer.appendChild(newItem);
            }
        });

        // Event delegation for existing delete buttons
        repeaterContainer.addEventListener("click", function (event) {
            if (event.target.closest(".delete-item")) {
                event.preventDefault(); // Prevent default link behavior
                const repeaterItem = event.target.closest(".repeater-item");
                if (repeaterItem) {
                    repeaterItem.remove(); // Remove the item block
                }
            }
        });
    });

</script>

@* <script>
    document.addEventListener("DOMContentLoaded", function () {
        const addItemButton = document.querySelector(".add-item-btn");
        const repeaterContainer = document.querySelector(".repeater-container");

        addItemButton.addEventListener("click", function () {
            // Find the first repeater item as a template
            const template = document.querySelector(".repeater-item");
            if (template) {
                // Clone the template block
                const newItem = template.cloneNode(true);

                // Reset editor content and clear other dynamic values
                const editors = newItem.querySelectorAll(".editor");
                editors.forEach((editor) => {
                    editor.innerHTML = ""; // Clear the editor content
                });

                // Append the new item to the container
                repeaterContainer.appendChild(newItem);
            } else {
                console.error("Repeater item template not found.");
            }
        });
    });
</script>
 *@


<script>
    // Get modal elements
    const modal = document.getElementById('imageModal');
    const modalImg = document.getElementById('largeImage');
    const closeBtn = document.getElementById('closeModal');

    // Get all thumbnail images
    const thumbnails = document.querySelectorAll('.thumbnail');

    // Add click event listeners to thumbnails
    thumbnails.forEach((thumbnail) => {
        thumbnail.addEventListener('click', function () {
            modal.style.display = 'block'; // Show the modal
            modalImg.src = '/image/layoutimage.jpg'; // Set the large image's src to the clicked thumbnail's src
        });
    });

    // Close the modal when the close button is clicked
    closeBtn.addEventListener('click', () => {
        modal.style.display = 'none';
    });

    // Close the modal when clicking anywhere outside the modal content
    window.addEventListener('click', (event) => {
        if (event.target === modal) {
            modal.style.display = 'none';
        }
    });

</script>

<!--Script for edit title text-->
<script>
    document.getElementById('edit-Inspection-link').addEventListener('click', function (e) {
        e.preventDefault();
        var titleText = document.getElementById('Inspection-text');
        var titleInput = document.getElementById('Inspection-input');
        var editIcon = document.getElementById('edit-Inspection-link');
        if (titleInput.style.display === 'none') {
            titleInput.style.display = 'inline-block';
            titleInput.value = titleText.innerText;
            titleText.style.display = 'none';
            editIcon.style.display = 'none';

            titleInput.focus();
        } else {
            titleText.innerText = titleInput.value;
            titleInput.style.display = 'none';
            titleText.style.display = 'inline-block';
            editIcon.style.display = 'inline-block';
        }
    });
    document.addEventListener('click', function (e) {
        var titleText = document.getElementById('Inspection-text');
        var titleInput = document.getElementById('Inspection-input');
        var editIcon = document.getElementById('edit-Inspection-link');
        if (!titleText.contains(e.target) && !titleInput.contains(e.target) && !editIcon.contains(e.target)) {
            if (titleInput.style.display === 'inline-block') {
                titleText.innerText = titleInput.value;
                titleInput.style.display = 'none';
                titleText.style.display = 'inline-block';
                editIcon.style.display = 'inline-block';
            }
        }
    });


</script>

